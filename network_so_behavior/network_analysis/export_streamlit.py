import streamlit as st
import streamlit.components.v1 as components
import os
import glob

def get_graph_name_from_path(path: str, graph_type: str) -> str:
    redacted_graph_name = path.replace('/mount/src/vulnerability_monitor/network_so_behavior/network_analysis/graphs/', '')
    redacted_graph_name = redacted_graph_name.replace(f'{graph_type}_', '').replace('_process_network_graph.html', '')
    return redacted_graph_name

st.title('Vulnerability Monitor')

folder_path = os.path.join(os.path.dirname(__file__), 'graphs')
pattern = os.path.join(folder_path, '*_process_network_graph.html')
html_paths = glob.glob(pattern)

# Define available graph types
graph_types = ["undirected", "directed"]
default_graph_type = "undirected"

# Create a selectbox for choosing the graph type
default_index_type = graph_types.index(default_graph_type) if default_graph_type in graph_types else 0
selected_graph_type = st.selectbox('Select a graph type to view:', graph_types, index=default_index_type)

# Filter graph names based on the selected graph type
graph_names = [get_graph_name_from_path(path, selected_graph_type) for path in html_paths if selected_graph_type in path]

# Define default graph name
default_graph_name = "dllhost"
default_index = graph_names.index(default_graph_name) if default_graph_name in graph_names else 0
selected_graph = st.selectbox('Select a graph to view:', graph_names, index=default_index)

if selected_graph:
    for path in html_paths:
        if get_graph_name_from_path(path, selected_graph_type) == selected_graph:
            selected_path = path
            break
    
    if selected_path:
        st.write(f"Displaying {selected_graph_type} graph of process: {selected_graph}")
        with open(selected_path, 'r') as file:
            html_content = file.read()
        components.html(html_content, height=600)
