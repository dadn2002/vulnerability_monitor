
#ifndef FUNCTIONS_HEADER_H
#define FUNCTIONS_HEADER_H

#include <windows.h>  // For LPVOID

// Structure declaration
struct PointerPair {
    LPVOID lpLocalCounter;
    LPVOID lpAddressTrampoline;
};

struct ListOfTrackedPIDs {
    int id;
    int hookPID;
    char* procName;  // change to procName
    LPVOID counter;
};

struct ListOfCountersOfProcNames {
    char* procName; //NtOpenProcess, ZwAllocateVirtualMemory...
    int counter;
    int numberOfPublishers;
};

// Variable declaration
extern bool debugEnabled;
extern int Counter;      
extern LPVOID lpCounter; 

// Function declaration
void menu_info();  

char** ListExportedNtFunctions(int pid, const char* dllName);
LPVOID getRemoteProcAddress(int targetPid, const char* dllName, const char* functionName);
LPVOID injectCode(int hookPid, const char* dllName, const char* functionName);
PointerPair injectTrampoline(HANDLE hProcess);
BOOL writeNOPs(HANDLE hProcess, LPVOID lpAddress, int numBytes);
int PleaseReadProcessMemory(int hookPID, LPVOID lpAddress);
BOOLEAN OpenExecutable(const char* processName);
DWORD GetPIDByProcessName(const char* processName, DWORD timeoutMilliseconds);

#endif